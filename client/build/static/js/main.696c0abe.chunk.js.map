{"version":3,"sources":["components/layout/Header.js","components/layout/Footer.js","components/layout/SideNav.js","components/layout/Layout.js","components/Inventory.js","components/Cart.js","components/OrderHistory.js","components/Product.js","components/Stock.js","RouteConfig.js","App.js","serviceWorker.js","index.js"],"names":["StyledMenu","styled","Menu","Header","useState","activeItem","setActiveItem","history","useHistory","location","useLocation","handleClick","item","push","useEffect","pathname","fixed","Item","name","active","onClick","position","StyledDiv","div","Footer","href","target","Date","getFullYear","SideNav","vertical","color","StyledContent","StyledContainer","Layout","children","fluid","Container","Grid","Column","width","response","data","products","id","productName","description","price","quatity","Inventory","Table","celled","selectable","Row","HeaderCell","Body","map","product","index","key","Cell","Cart","OrderHistory","Product","Stock","Segment","Form","Field","placeholder","Group","widths","type","Button","primary","RouteConfig","path","App","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.696c0abe.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { Menu } from \"semantic-ui-react\";\nimport styled from \"styled-components\";\n\nconst StyledMenu = styled(Menu)`\n  &&&& {\n    /* background-color: lightgray; */\n  }\n`;\n\nfunction Header() {\n  const [activeItem, setActiveItem] = useState(\"/\");\n  const history = useHistory();\n  const location = useLocation();\n  useEffect(() => {\n    setActiveItem(location.pathname);\n  }, [location.pathname]);\n\n  function handleClick(item) {\n    history.push(item);\n    setActiveItem(item);\n  }\n  return (\n    <StyledMenu fixed=\"top\">\n      <Menu.Item\n        name=\"Home\"\n        active={activeItem === \"/inventory\"}\n        onClick={() => {\n          handleClick(\"/inventory\");\n        }}\n      />\n      <Menu.Item\n        name=\"Cart\"\n        active={activeItem === \"/cart\"}\n        position=\"right\"\n        onClick={() => {\n          handleClick(\"/cart\");\n        }}\n      />\n    </StyledMenu>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst StyledDiv = styled.div`\n  text-align: center;\n  font-size: 0.81rem;\n  padding: 0.75rem 0;\n  box-shadow: rgba(0, 0, 0, 0.16) 0px 1px 2px 0px inset;\n`;\n\nfunction Footer() {\n  return (\n    <StyledDiv>\n      <a\n        href=\"https://www.tactuallabs.com/\"\n        target=\"\n      _blank\"\n      >\n        Terms & Conditions\n      </a>\n      <span>\n        - Identifi &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&copy;{\" \"}\n        {new Date().getFullYear()} Tactual Labs, LLC.\n      </span>\n    </StyledDiv>\n  );\n}\n\nexport default Footer;\n","import React, { useState, useEffect } from \"react\";\nimport { Menu } from \"semantic-ui-react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nfunction SideNav() {\n  const [activeItem, setActiveItem] = useState(\"/inventory\");\n  const history = useHistory();\n  const location = useLocation();\n\n  useEffect(() => {\n    setActiveItem(location.pathname);\n  }, [location.pathname]);\n\n  function handleClick(item) {\n    history.push(item);\n    setActiveItem(item);\n  }\n\n  return (\n    <Menu vertical color=\"grey\">\n      <Menu.Item\n        active={activeItem === \"/inventory\"}\n        onClick={() => {\n          handleClick(\"/inventory\");\n        }}\n      >\n        View Inventory\n      </Menu.Item>\n      <Menu.Item\n        active={activeItem === \"/addStock\"}\n        onClick={() => {\n          handleClick(\"/addStock\");\n        }}\n      >\n        Add Stock\n      </Menu.Item>\n      <Menu.Item\n        active={activeItem === \"/orderHistory\"}\n        onClick={() => {\n          handleClick(\"/orderHistory\");\n        }}\n      >\n        Order History\n      </Menu.Item>\n    </Menu>\n  );\n}\n\nexport default SideNav;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Container, Grid, Segment } from \"semantic-ui-react\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport SideNav from \"./SideNav\";\n\nconst StyledContent = styled.div`\n  min-height: 96vh;\n  overflow-y: auto;\n  padding-top: 4em;\n`;\n\nconst StyledContainer = styled.div`\n  /* background-color: lightgray; */\n`;\n\nfunction Layout({ children }) {\n  return (\n    <StyledContainer fluid>\n      <Header />\n      <StyledContent>\n        <Container>\n          <Grid>\n            <Grid.Column width={4}>\n              <SideNav />\n            </Grid.Column>\n            <Grid.Column width={12}>\n              <Container>{children}</Container>\n            </Grid.Column>\n          </Grid>\n        </Container>\n      </StyledContent>\n      <Footer />\n    </StyledContainer>\n  );\n}\n\nexport default Layout;\n","import React from \"react\";\nimport { Table } from \"semantic-ui-react\";\n\nconst response = {\n  data: {\n    products: [\n      {\n        id: 1,\n        productName: \"Television\",\n        description: \"Viewing device\",\n        price: \"99.00\",\n        quatity: \"10\",\n      },\n      {\n        id: 2,\n        productName: \"Sensor\",\n        description: \"Sound Sensor\",\n        price: \"99.00\",\n        quatity: \"10\",\n      },\n      {\n        id: 3,\n        productName: \"Sensor\",\n        description: \"Sound Sensor\",\n        price: \"99.00\",\n        quatity: \"10\",\n      },\n      {\n        id: 4,\n        productName: \"Sensor\",\n        description: \"Sound Sensor\",\n        price: \"99.00\",\n        quatity: \"10\",\n      },\n      {\n        id: 5,\n        productName: \"Sensor\",\n        description: \"Sound Sensor\",\n        price: \"99.00\",\n        quatity: \"10\",\n      },\n      {\n        id: 6,\n        productName: \"Sensor\",\n        description: \"Sound Sensor\",\n        price: \"99.00\",\n        quatity: \"10\",\n      },\n      {\n        id: 7,\n        productName: \"Sensor\",\n        description: \"Sound Sensor\",\n        price: \"99.00\",\n        quatity: \"10\",\n      },\n    ],\n  },\n};\n\nfunction Inventory() {\n  return (\n    <Table celled selectable>\n      <Table.Header>\n        <Table.Row>\n          <Table.HeaderCell>#</Table.HeaderCell>\n          <Table.HeaderCell>Product Name</Table.HeaderCell>\n          <Table.HeaderCell>Description</Table.HeaderCell>\n          <Table.HeaderCell>Price</Table.HeaderCell>\n          <Table.HeaderCell>Quantity</Table.HeaderCell>\n        </Table.Row>\n      </Table.Header>\n\n      <Table.Body>\n        {response.data.products.map((product, index) => (\n          <Table.Row key={product.id}>\n            <Table.Cell>{index + 1}</Table.Cell>\n            <Table.Cell>{product.productName}</Table.Cell>\n            <Table.Cell>{product.description}</Table.Cell>\n            <Table.Cell>{product.price}</Table.Cell>\n            <Table.Cell>{product.quatity}</Table.Cell>\n          </Table.Row>\n        ))}\n      </Table.Body>\n    </Table>\n  );\n}\n\nexport default Inventory;\n","import React from \"react\";\n\nfunction Cart() {\n  return <div>Cart</div>;\n}\n\nexport default Cart;\n","import React from \"react\";\n\nfunction OrderHistory() {\n  return <div>OrderHistory</div>;\n}\n\nexport default OrderHistory;\n","import React from \"react\";\n\nfunction Product() {\n  return <div>Product</div>;\n}\n\nexport default Product;\n","import React from \"react\";\nimport { Form, Button, Checkbox, Segment } from \"semantic-ui-react\";\n\nfunction Stock() {\n  return (\n    <Segment>\n      <Form>\n        <Form.Field>\n          <label>Product Name</label>\n          <input placeholder=\"Product Name\" />\n        </Form.Field>\n        <Form.Field>\n          <label>Description</label>\n          <input placeholder=\"Description\" />\n        </Form.Field>\n        <Form.Group widths=\"equal\">\n          <Form.Field>\n            <label>Quantity</label>\n            <input type=\"text\" placeholder=\"0\" />\n          </Form.Field>\n          <Form.Field>\n            <label>Price</label>\n            <input type=\"text\" placeholder=\"0\" />\n          </Form.Field>\n        </Form.Group>\n        <Button type=\"submit\" primary>\n          Submit\n        </Button>\n      </Form>\n    </Segment>\n  );\n}\n\nexport default Stock;\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport Inventory from \"./components/Inventory\";\nimport Cart from \"./components/Cart\";\nimport OrderHistory from \"./components/OrderHistory\";\nimport Product from \"./components/Product\";\nimport Stock from \"./components/Stock\";\n\nfunction RouteConfig() {\n  return (\n    <Switch>\n      <Route path=\"/cart\">\n        <Cart />\n      </Route>\n      <Route path=\"/inventory/products/:productId\">\n        <Product />\n      </Route>\n      <Route path=\"/orderHistory\">\n        <OrderHistory />\n      </Route>\n      <Route path=\"/addStock\">\n        <Stock />\n      </Route>\n      <Route path=\"/inventory\">\n        <Inventory />\n      </Route>\n      <Route path=\"*\">\n        <Inventory />\n      </Route>\n    </Switch>\n  );\n}\n\nexport default RouteConfig;\n","import React from \"react\";\nimport Layout from \"./components/layout/Layout\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport RouteConfig from \"./RouteConfig\";\n\nfunction App() {\n  return (\n    <Router>\n      <Layout>\n        <RouteConfig />\n      </Layout>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}