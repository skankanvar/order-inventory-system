{"ast":null,"code":"var _jsxFileName = \"/Users/rtakkallapalli/Projects/order-inventory-system/client/src/components/Order.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Segment, Header, Table, Form, Checkbox, Button, Divider } from \"semantic-ui-react\";\nimport Address from \"./Address\";\n\nfunction Order() {\n  const [order, setOrder] = useState({\n    shippingAddress: {\n      street1: \"23600 Kindred Ter\",\n      street2: \"\",\n      zipCode: \"20148\",\n      state: \"VA\"\n    },\n    products: [{\n      id: 1,\n      name: \"Voltage Converter\",\n      quantity: \"10\",\n      isFulfilled: false\n    }]\n  });\n  return /*#__PURE__*/React.createElement(Segment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    as: \"h2\",\n    icon: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, \"Order Items\"), /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    celled: true,\n    singleLine: true,\n    fixed: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Table.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Table.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Table.HeaderCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 15\n    }\n  }, \"#\"), /*#__PURE__*/React.createElement(Table.HeaderCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 15\n    }\n  }, \"Product Name\"), /*#__PURE__*/React.createElement(Table.HeaderCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 15\n    }\n  }, \"Quantity\"), /*#__PURE__*/React.createElement(Table.HeaderCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 15\n    }\n  }, \"isFulfilled\"))), /*#__PURE__*/React.createElement(Table.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, order.products.map(product => /*#__PURE__*/React.createElement(Table.Row, {\n    key: product.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Table.Cell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }, product.id), /*#__PURE__*/React.createElement(Table.Cell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }, product.name), /*#__PURE__*/React.createElement(Table.Cell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }, product.quantity), /*#__PURE__*/React.createElement(Table.Cell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    value: product.isFulfilled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 19\n    }\n  })))))), /*#__PURE__*/React.createElement(Button, {\n    primary: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, \"Save\")), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Address, {\n    address: order.shippingAddress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default Order;","map":{"version":3,"sources":["/Users/rtakkallapalli/Projects/order-inventory-system/client/src/components/Order.js"],"names":["React","useState","useEffect","Segment","Header","Table","Form","Checkbox","Button","Divider","Address","Order","order","setOrder","shippingAddress","street1","street2","zipCode","state","products","id","name","quantity","isFulfilled","map","product"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  Segment,\n  Header,\n  Table,\n  Form,\n  Checkbox,\n  Button,\n  Divider,\n} from \"semantic-ui-react\";\nimport Address from \"./Address\";\n\nfunction Order() {\n  const [order, setOrder] = useState({\n    shippingAddress: {\n      street1: \"23600 Kindred Ter\",\n      street2: \"\",\n      zipCode: \"20148\",\n      state: \"VA\",\n    },\n    products: [\n      { id: 1, name: \"Voltage Converter\", quantity: \"10\", isFulfilled: false },\n    ],\n  });\n\n  return (\n    <Segment>\n      <Header as=\"h2\" icon>\n        Order Items\n      </Header>\n      <Form>\n        <Table celled singleLine fixed>\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell>#</Table.HeaderCell>\n              <Table.HeaderCell>Product Name</Table.HeaderCell>\n              <Table.HeaderCell>Quantity</Table.HeaderCell>\n              <Table.HeaderCell>isFulfilled</Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n\n          <Table.Body>\n            {order.products.map((product) => (\n              <Table.Row key={product.id}>\n                <Table.Cell>{product.id}</Table.Cell>\n                <Table.Cell>{product.name}</Table.Cell>\n                <Table.Cell>{product.quantity}</Table.Cell>\n                <Table.Cell>\n                  <Checkbox value={product.isFulfilled} />\n                </Table.Cell>\n              </Table.Row>\n            ))}\n          </Table.Body>\n        </Table>\n        <Button primary>Save</Button>\n      </Form>\n      <Divider />\n      <Address address={order.shippingAddress} />\n    </Segment>\n  );\n}\n\nexport default Order;\n"]},"metadata":{},"sourceType":"module"}